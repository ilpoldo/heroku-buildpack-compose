#!/usr/bin/env ruby
# -----------------------------------------------------------------------------
# A heroku buildpack for composing other buildpacks
# Copyright (c) 2012 - Ben Mather
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
# -----------------------------------------------------------------------------


require 'yaml'
require 'tmpdir'

def indent(str)
    str.split("\n").each do |line|
        puts "       #{line}"
    end
end

def arrow(str)
    str.split("\n").each do |line|
        puts "-----> #{line}"
    end
end

def error(str)
    str.split("\n").each do |line|
        puts " !     #{line}"
    end
end


build_dir = ARGV[0]
cache_dir = ARGV[1]
env_dir   = ARGV[2]

buildpacks_file = ENV.fetch("BUILDPACKS_FILE", ".buildpacks")

release = {
    "addons" => [],
    "config_vars" => {},
    "default_process_types" => {}
}


File::open("#{build_dir}/#{buildpacks_file}", "r") do |buildpacks|
    buildpacks.each do |buildpack|
        Dir::mktmpdir "child_buildpack_" do |tmp_dir|
            buildpack_dir = "#{tmp_dir}/buildpack"

            buildpack.chomp!
            url, *extra = buildpack.split '#'
            branch = extra.join

            if branch != ''
                branch = "--branch #{branch}"
            end

            arrow "Fetching child buildpack"
            `git clone --depth 1 #{branch} #{url} #{buildpack_dir}`

            Dir::chdir buildpack_dir do

                `chmod +x ./bin/detect`
                `chmod +x ./bin/compile`
                `chmod +x ./bin/release`

                name = `./bin/detect #{ARGV[0]}`.chomp
                arrow "#{name} app detected"

                if $?.to_i == 0
                    # run the buildpack
                    arrow "Executing #{name} buildpack"

                    indent `./bin/compile #{build_dir} #{cache_dir} #{env_dir} 2>&1`

                    if $?.to_i != 0
                        error "Child buildpack compile script failed"
                        exit 1
                    end

                    # update release info
                    tmp_release = `./bin/release #{build_dir}`

                    if $?.to_i != 0
                        error "Child buildpack release script failed"
                        exit 1
                    end

                    if tmp_release = YAML::load(tmp_release)
                        release["addons"].concat(tmp_release["addons"] || [])

                        release["default_process_types"].update(
                                    tmp_release["default_process_types"] || {})

                        release["config_vars"].update(
                                    tmp_release["config_vars"] || {})

                        release["config_vars"].each do |key,value|
                            release["config_vars"][key] = String value
                        end

                        # Add new configuration variables to environment
                        ENV.update(release["config_vars"])
                    else
                        error "No output from child release script.  Ignoring"
                    end
                else
                    error "buildpack retrieved  from #{buildpack} claimed not to apply to this app"
                    exit 1
                end
            end
        end
    end
end

arrow "Writing release file"
File.open("#{build_dir}/.heroku-buildpack-compose_release_info", "w") do |release_file|
    release_file.syswrite(release.to_yaml)
end

arrow "Completed succesfully"
